# Generated by Django 3.0.3 on 2020-03-10 12:46

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('problems_per_interview', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('expired_time', models.DateTimeField()),
                ('finished_time', models.DateTimeField(null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interview_backend.Company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('text', models.TextField()),
                ('code_template', models.TextField()),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=1800))),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.TextField()),
                ('expected_output', models.TextField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interview_backend.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interview_backend.Interview')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interview_backend.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=32)),
                ('code', models.BinaryField()),
                ('judgement', models.IntegerField(choices=[(1, 'Ac'), (2, 'Wa'), (3, 'Ce'), (4, 'Tle'), (5, 'Mle')])),
                ('failed_output', models.BinaryField()),
                ('failed_at', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='interview_backend.TestCase')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interview_backend.Task')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interview_backend.Company')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interview_backend.Problem')),
            ],
        ),
    ]
